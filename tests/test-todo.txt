Ways to run tests on Windows dev machine:
F5 in vsc with "Debug Tox Tests" configuration
py runtox.py
py runcoverage.py
py -m pytest [-q for quiet] [-v or -vv for verbose level]
py -m pytest -m "not slow"

Testing todo:

- near 100% coverage of run_many.py

- core functionality
	- argv list
	- stdin list
	- argv overwriting
	- stdin overwriting
	- comment ^^^|
	- ! comments
	- exit ^^^|^^^
	- malformed .many " ~~~|..." fails

THINGS BELOW HERE DONE

- only 3 imports work

- all examples
	- argv.many
	- hellolanguage.many
	- helloworld.many
	- sample.many (rename?)

- ways to run @pytest.mark.parametrize(argnames, argvalues)
	- command line
		- input file only
		- with json
		- with output
	- runmany
		- from file
		- from string
		- to stdout
		- to file
		- with default json
		- with custom json, raw or file
	- runmany_to_s
		- from file
		- from string
		- with default json
		- with custom json, raw or file
	- runmany_to_f
		- from file
		- from string
		- with default json
		- with custom json, raw or file
	- with pathlib path
	- with str path
	- with custom path-like that defines __fspath__?
	- with bytes path?

- all errors
	- no NAME_KEY
	- can't match all_name
	- no COMMAND_KEY
	- language in header not found
	- no matching lead section

- all json settings (with defaulting)
	- all_name
	- timeout
	- languages overrides
	- language custom settings
	- stderr 3 options
	- check_equal
	- show_prologue
	- show_command
	- show_code
	- show_argv
	- show_stdin
	- show_output
	- show_errors (need to redirect stderr?)
	- show_epilogue

- syntax
	- all name expands
	- multiple languages in header
	- code list